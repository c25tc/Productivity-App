import React, { useState, useEffect } from "react";
import Head from "next/head";
import Header from "../components/Header";
import Footer from "../components/Footer";
import Day from "../components/Day";
import Task from "../components/Task";
import NewTask from "../components/NewTask";
import MobileHeader from "../components/MobileHeader";
import { motion, AnimatePresence } from "framer-motion";

export default function Home() {
  const [tasks, setTasks] = useState([
    {
      name: "read and annotate the source for english until complete but annotate only for how",
      time: 75,
      date: [9, 12, 2022],
      key: [1],
    },
    {
      name: "write context draft",
      time: 120,
      date: [9, 13, 2022],
      key: [2],
    },
    {
      name: "english reading",
      time: 60,
      date: [9, 14, 2022],
      key: [3],
    },
    {
      name: "got over 2.3",
      time: 120,
      date: [9, 14, 2022],
      key: [4],
    },
    {
      name: "math homework",
      time: 45,
      date: [9, 14, 2022],
      key: [5],
    },
    {
      name: "mandarin recording",
      time: 135,
      date: [9, 15, 2022],
      key: [6],
    },
  ]);

  useEffect(() => {
    console.log(tasks)
    console.log("yesss")

  }, [tasks])
  

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <motion.div initial={{ y: -100 }} animate={{ y: 0 }} exit={{ x: 100 }}>
        <Header
          name={"tasks"}
          left={"pink"}
          middle={"blue"}
          right={"green"}
          leftLink={"schedule"}
          rightLink={"projects"}
        />
        <MobileHeader
          name={"tasks"}
          color="blue"
          topLeftButton={"+"}
          leftButtonLink=""
        />

        <Day day={"today"} />
        {tasks.map(
          (task) =>
            task.date[1] == 12 && (
              <Task
                name={task.name}
                key={task.key}
                num={tasks.indexOf(task)}
                tasks={tasks}
                setTasks={setTasks}
              />
            )
        )}
        <NewTask setTask={setTasks} tasks={tasks} day={[9, 12, 22]} />
        <Day day={"tommorow"} />
        {tasks.map(
          (task) =>
            task.date[1] == 13 && (
              <Task
                name={task.name}
                key={task.key}
                num={tasks.indexOf(task)}
                tasks={tasks}
                setTasks={setTasks}
              />
            )
        )}
        <NewTask setTask={setTasks} tasks={tasks} day={[9, 13, 22]} />
        <Day day={"9/14"} />
        {tasks.map(
          (task) =>
            task.date[1] == 14 && (
              <Task
                name={task.name}
                key={task.key}
                num={tasks.indexOf(task)}
                tasks={tasks}
                setTasks={setTasks}
              />
            )
        )}
        <NewTask setTask={setTasks} tasks={tasks} day={[9, 14, 22]} />
        <Day day={"9/15"} />
        {tasks.map(
          (task) =>
            task.date[1] == 15 && (
              <Task
                name={task.name}
                key={task.key}
                num={tasks.indexOf(task)}
                tasks={tasks}
                setTasks={setTasks}
              />
            )
        )}
        <NewTask setTask={setTasks} tasks={tasks} day={[9, 15, 22]} />
      </motion.div>

      <Footer
        left={"col-span-2 row-span-4"}
        middle={"col-span-3 row-span-5"}
        right={"col-span-2 row-span-4"}
      />
    </div>
  );
}
