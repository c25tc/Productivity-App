import React, { useState, useEffect } from "react";
import Head from "next/head";
import Header from "../components/Header";
import Footer from "../components/Footer";
import MobileHeader from "../components/MobileHeader";
import { motion } from "framer-motion";
import Schedule from "../components/Schedule";
import ScheduleEdit from "../components/ScheduleEdit";

export default function Home() {
  // let date;
  const today = new Date();
  const [date, setDate] = useState(today);
  const [, updateState] = React.useState();
  const forceUpdate = React.useCallback(() => updateState({}), []);
  const [blocks, setBlocks] = useState([]);

  const dateTracker = new Date();
  dateTracker.setDate(dateTracker.getDate() - 1);

  const [blockOffTimes, setblockOffTimes] = useState([
    [
      [0, 120],
      [720, 60],
      [1200, 90],
    ],
    [
      [180, 120],
      [750, 60],
      [1230, 90],
    ],
    [
      [150, 120],
      [780, 60],
      [1260, 90],
    ],
    [
      [120, 120],
      [720, 60],
      [1170, 90],
    ],
    [
      [90, 120],
      [720, 60],
      [1140, 90],
    ],
    [
      [60, 120],
      [720, 60],
      [1290, 30],
    ],
    [
      [30, 120],
      [810, 60],
      [1350, 30],
    ],
  ]);

  useEffect(() => {
    const newDate = new Date();
    setDate(newDate);
    newSchedule();
    console.log(date);
  }, []);
  useEffect(() => {
    newSchedule();
  }, [date]);

  function newSchedule() {
    console.log(date);
    setBlocks([]);
    const newBlocks = [];
    for (let i = 0; i < blockOffTimes[date.getDay()].length; i++) {
      let top = 297 + blockOffTimes[date.getDay()][i][0];
      newBlocks.push(
        <motion.div
          className={`w-7/12 bg-[#D9D9D9] opacity-80 absolute left-[22%] rounded-xl drop-shadow-lg`}
          style={{
            height: blockOffTimes[date.getDay()][i][1] + "px",
            top: top,
          }}
          key={i}
          layoutId={`block-off-times-${i}`}
        ></motion.div>
      );
    }
    setBlocks(newBlocks);
  }

  return (
    <div>
      <Head>
        <title>schedule</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <motion.div
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        exit={{ opacity: 0 }}
      >
        <Header
          name={"schedule"}
          left={"green"}
          middle={"pink"}
          right={"blue"}
          leftLink={"projects"}
          rightLink={"tasks"}
        />
        <MobileHeader
          name={"schedule"}
          color="pink"
          topLeftButton={"edit"}
          leftButtonLink="/schedule/edit"
        />

        <div className="grid grid-cols-12 text-center">
          <div
            className="col-start-2 col-span-3 translate-y-1 cursor-pointer"
            onClick={() => {
              const newDate = new Date(date);
              newDate.setDate(newDate.getDate() - 1);
              setDate(newDate);
            }}
          >
            {today.getDate() == date.getDate() && "yesterday"}
            {today.getDate() + 2 == date.getDate() && "tomorrow"}
            {today.getDate() + 1 == date.getDate() && "today"}
            {/* {(today.getDate() + 1 != date.getDate() && today.getDate() + 2 == date.getDate() && today.getDate() != date.getDate()) && "nope"} */}
          </div>
          <div className="font-bold text-3xl col-span-4 -translate-y-1 cursor-pointer">
            {today.getDate() == date.getDate() && "today"}
            {today.getDate() - 1 == date.getDate() && "yesterday"}
            {today.getDate() + 1 == date.getDate() && "tomorrow"}
          </div>
          <div
            className="col-span-3 translate-y-1 cursor-pointer"
            onClick={() => {
              const newDate = new Date(date);
              newDate.setDate(newDate.getDate() + 1);
              setDate(newDate);
            }}
          >
            {today.getDate() == date.getDate() && "tomorrow"}
            {today.getDate() - 1 == date.getDate() && "today"}
            {today.getDate() - 2 == date.getDate() && "yesterday"}
          </div>
        </div>

        <Schedule />
        {blocks}
        {/* <div className=" w-7/12 h-[240px] bg-[#D9D9D9] opacity-80 absolute top-[297px] left-[22%] rounded-xl drop-shadow-lg"></div> */}
        <div className=" w-7/12 h-[60px] bg-blue absolute top-[537px] left-[22%] rounded-xl drop-shadow-lg text-white text-xl font-bold text-center p-4">
          english homework
        </div>
      </motion.div>

      <Footer
        left={"col-span-3 row-span-5"}
        middle={"col-span-2 row-span-4"}
        right={"col-span-2 row-span-4"}
      />
    </div>
  );
}
